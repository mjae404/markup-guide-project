{"version":3,"file":"stories-TrInput-stories.36472429de150012eee2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://99_markup_guide/./src/stories/TrInput.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles/TrInput.module.scss';\n\nexport const TrInput = ({ id, label, labelShow, labelColor, type, placeholder, required, disabled, readonly, inputSize, buttonType, buttonText, textDescShow, textDesc, ...props }) => {\n    return (\n        <div className={`${styles['input-container']} ${inputSize !== 'medium' ? styles[inputSize] : ''}`} {...props}>\n            <label\n                htmlFor={id}\n                className={`${styles['input-label']}\n                ${labelColor ? styles[labelColor] : ''}\n                ${labelShow ? '' : styles['blind']}`}\n            >\n                {label}\n                {\n                    required &&\n                    <span className={styles['input-required-point']}>*</span>\n                }\n            </label>\n            <div className={styles['input-wrap']}>\n                <input\n                    id={id}\n                    className={`${styles['input']} ${buttonType !== 'null' && styles['icon']}`}\n                    type={type}\n                    placeholder={placeholder}\n                    required={required}\n                    disabled={disabled}\n                    readOnly={readonly}\n                />\n                {\n                    buttonType !== 'null' &&\n                    <button type=\"button\" className={`${styles['input-button']} ${styles[buttonType]}`}>\n                        <span className={styles['blind']}>{buttonText}</span>\n                    </button>\n                }\n            </div>\n            {\n                textDescShow !== 'null' &&\n                <p className={`${styles['input-text']} ${styles[textDescShow]}`}>\n                    {textDesc}\n                </p>\n            }\n        </div>\n    );\n};\n\nTrInput.propTypes = {\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    readonly: PropTypes.bool,\n    placeholder: PropTypes.string,\n    inputSize: PropTypes.oneOf(['small', 'medium', 'large']),\n    buttonType: PropTypes.oneOf(['null', 'search']),\n    buttonText: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    labelShow: PropTypes.bool,\n    textDescShow: PropTypes.oneOf(['null', 'basic', 'success', 'fail']),\n    textDesc: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nTrInput.defaultProps = {\n    id: null,\n    required: false,\n    disabled: false,\n    readonly: false,\n    labelShow: true,\n    placeholder: null,\n    inputSize: 'medium',\n    buttonType: null,\n    buttonText: null,\n    textDescShow: 'null',\n    textDesc: '',\n    onClick: undefined,\n};\n"],"names":[],"sourceRoot":""}