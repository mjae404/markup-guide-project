"use strict";
(globalThis["webpackChunk_99_markup_guide"] = globalThis["webpackChunk_99_markup_guide"] || []).push([["stories-TrPopup-stories"],{

/***/ "./src/stories/TrPopup.stories.js":
/*!****************************************!*\
  !*** ./src/stories/TrPopup.stories.js ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Basic": () => (/* binding */ Basic),
/* harmony export */   "NoCloseButton": () => (/* binding */ NoCloseButton),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module './Popup'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _Basic$parameters, _Basic$parameters2, _Basic$parameters2$do, _NoCloseButton$parame, _NoCloseButton$parame2, _NoCloseButton$parame3;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Component/Popup',
  component: Object(function webpackMissingModule() { var e = new Error("Cannot find module './Popup'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
  args: {
    title: '제목입니다',
    closeButton: true,
    popupText: '내용입니다',
    buttonLabel1: {},
    buttonLabel2: {}
  }
});
const Basic = {};
const NoCloseButton = {
  args: {
    closeButton: false,
    buttonLabel1: {
      type: 'button',
      primary: true,
      size: 'medium',
      label: '버튼1'
    },
    buttonLabel2: {
      type: 'button',
      primary: false,
      size: 'medium',
      label: '버튼2'
    }
  }
};
Basic.parameters = {
  ...Basic.parameters,
  docs: {
    ...((_Basic$parameters = Basic.parameters) === null || _Basic$parameters === void 0 ? void 0 : _Basic$parameters.docs),
    source: {
      originalSource: "{}",
      ...((_Basic$parameters2 = Basic.parameters) === null || _Basic$parameters2 === void 0 ? void 0 : (_Basic$parameters2$do = _Basic$parameters2.docs) === null || _Basic$parameters2$do === void 0 ? void 0 : _Basic$parameters2$do.source)
    }
  }
};
NoCloseButton.parameters = {
  ...NoCloseButton.parameters,
  docs: {
    ...((_NoCloseButton$parame = NoCloseButton.parameters) === null || _NoCloseButton$parame === void 0 ? void 0 : _NoCloseButton$parame.docs),
    source: {
      originalSource: "{\n  args: {\n    closeButton: false,\n    buttonLabel1: {\n      type: 'button',\n      primary: true,\n      size: 'medium',\n      label: '\uBC84\uD2BC1'\n    },\n    buttonLabel2: {\n      type: 'button',\n      primary: false,\n      size: 'medium',\n      label: '\uBC84\uD2BC2'\n    }\n  }\n}",
      ...((_NoCloseButton$parame2 = NoCloseButton.parameters) === null || _NoCloseButton$parame2 === void 0 ? void 0 : (_NoCloseButton$parame3 = _NoCloseButton$parame2.docs) === null || _NoCloseButton$parame3 === void 0 ? void 0 : _NoCloseButton$parame3.source)
    }
  }
};
const __namedExportsOrder = ["Basic", "NoCloseButton"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

}]);