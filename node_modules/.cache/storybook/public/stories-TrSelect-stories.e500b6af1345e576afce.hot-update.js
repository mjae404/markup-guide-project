"use strict";
globalThis["webpackHotUpdate_99_markup_guide"]("stories-TrSelect-stories",{

/***/ "./src/stories/TrSelect.stories.js":
/*!*****************************************!*\
  !*** ./src/stories/TrSelect.stories.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Basic": () => (/* binding */ Basic),
/* harmony export */   "Disabled": () => (/* binding */ Disabled),
/* harmony export */   "Large": () => (/* binding */ Large),
/* harmony export */   "Small": () => (/* binding */ Small),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "noLabel": () => (/* binding */ noLabel)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
Object(function webpackMissingModule() { var e = new Error("Cannot find module './Select'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/humuson/Desktop/project/personal/markup-guide-project/src/stories/TrSelect.stories.js",
  _Basic$parameters,
  _Basic$parameters2,
  _Basic$parameters2$do,
  _noLabel$parameters,
  _noLabel$parameters2,
  _noLabel$parameters2$,
  _Disabled$parameters,
  _Disabled$parameters2,
  _Disabled$parameters3,
  _Small$parameters,
  _Small$parameters2,
  _Small$parameters2$do,
  _Large$parameters,
  _Large$parameters2,
  _Large$parameters2$do;



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Component/Select',
  component: Object(function webpackMissingModule() { var e = new Error("Cannot find module './Select'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
  tags: ['autodocs']
});
const Template = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(Object(function webpackMissingModule() { var e = new Error("Cannot find module './Select'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), {
  ...args
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 8,
  columnNumber: 26
}, undefined);
_c = Template;
const Basic = Template.bind({});
Basic.args = {
  id: 'select',
  disabled: false,
  size: 'medium',
  labelShow: true,
  label: 'Basic',
  options: [{
    value: 'option1',
    label: 'option1'
  }, {
    value: 'option2',
    label: 'option2'
  }, {
    value: 'option3',
    label: 'option3'
  }]
};
const noLabel = Template.bind({});
noLabel.args = {
  id: 'noLabel',
  disabled: false,
  size: 'medium',
  labelShow: false,
  label: 'noLabel',
  options: [{
    value: 'option1',
    label: 'option1'
  }, {
    value: 'option2',
    label: 'option2'
  }, {
    value: 'option3',
    label: 'option3'
  }]
};
const Disabled = Template.bind({});
Disabled.args = {
  id: 'Disabled',
  disabled: true,
  size: 'medium',
  labelShow: true,
  label: 'Disabled',
  options: [{
    value: 'option1',
    label: 'option1'
  }, {
    value: 'option2',
    label: 'option2'
  }, {
    value: 'option3',
    label: 'option3'
  }]
};
const Small = Template.bind({});
Small.args = {
  id: 'Small',
  disabled: false,
  size: 'small',
  labelShow: true,
  label: 'Small',
  options: [{
    value: 'option1',
    label: 'option1'
  }, {
    value: 'option2',
    label: 'option2'
  }, {
    value: 'option3',
    label: 'option3'
  }]
};
const Large = Template.bind({});
Large.args = {
  id: 'Large',
  disabled: false,
  size: 'large',
  labelShow: true,
  label: 'Large',
  options: [{
    value: 'option1',
    label: 'option1'
  }, {
    value: 'option2',
    label: 'option2'
  }, {
    value: 'option3',
    label: 'option3'
  }]
};
Basic.parameters = {
  ...Basic.parameters,
  docs: {
    ...((_Basic$parameters = Basic.parameters) === null || _Basic$parameters === void 0 ? void 0 : _Basic$parameters.docs),
    source: {
      originalSource: "args => <Select {...args} />",
      ...((_Basic$parameters2 = Basic.parameters) === null || _Basic$parameters2 === void 0 ? void 0 : (_Basic$parameters2$do = _Basic$parameters2.docs) === null || _Basic$parameters2$do === void 0 ? void 0 : _Basic$parameters2$do.source)
    }
  }
};
noLabel.parameters = {
  ...noLabel.parameters,
  docs: {
    ...((_noLabel$parameters = noLabel.parameters) === null || _noLabel$parameters === void 0 ? void 0 : _noLabel$parameters.docs),
    source: {
      originalSource: "args => <Select {...args} />",
      ...((_noLabel$parameters2 = noLabel.parameters) === null || _noLabel$parameters2 === void 0 ? void 0 : (_noLabel$parameters2$ = _noLabel$parameters2.docs) === null || _noLabel$parameters2$ === void 0 ? void 0 : _noLabel$parameters2$.source)
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...((_Disabled$parameters = Disabled.parameters) === null || _Disabled$parameters === void 0 ? void 0 : _Disabled$parameters.docs),
    source: {
      originalSource: "args => <Select {...args} />",
      ...((_Disabled$parameters2 = Disabled.parameters) === null || _Disabled$parameters2 === void 0 ? void 0 : (_Disabled$parameters3 = _Disabled$parameters2.docs) === null || _Disabled$parameters3 === void 0 ? void 0 : _Disabled$parameters3.source)
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...((_Small$parameters = Small.parameters) === null || _Small$parameters === void 0 ? void 0 : _Small$parameters.docs),
    source: {
      originalSource: "args => <Select {...args} />",
      ...((_Small$parameters2 = Small.parameters) === null || _Small$parameters2 === void 0 ? void 0 : (_Small$parameters2$do = _Small$parameters2.docs) === null || _Small$parameters2$do === void 0 ? void 0 : _Small$parameters2$do.source)
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...((_Large$parameters = Large.parameters) === null || _Large$parameters === void 0 ? void 0 : _Large$parameters.docs),
    source: {
      originalSource: "args => <Select {...args} />",
      ...((_Large$parameters2 = Large.parameters) === null || _Large$parameters2 === void 0 ? void 0 : (_Large$parameters2$do = _Large$parameters2.docs) === null || _Large$parameters2$do === void 0 ? void 0 : _Large$parameters2$do.source)
    }
  }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "Template");
const __namedExportsOrder = ["Basic", "noLabel", "Disabled", "Small", "Large"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});