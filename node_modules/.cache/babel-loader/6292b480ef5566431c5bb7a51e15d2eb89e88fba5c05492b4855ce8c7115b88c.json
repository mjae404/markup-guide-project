{"ast":null,"code":"var _jsxFileName = \"/Users/humuson/Desktop/project/personal/markup-guide-project/src/stories/TrSelect.stories.js\",\n  _Basic$parameters,\n  _Basic$parameters2,\n  _Basic$parameters2$do,\n  _noLabel$parameters,\n  _noLabel$parameters2,\n  _noLabel$parameters2$,\n  _Disabled$parameters,\n  _Disabled$parameters2,\n  _Disabled$parameters3,\n  _Small$parameters,\n  _Small$parameters2,\n  _Small$parameters2$do,\n  _Large$parameters,\n  _Large$parameters2,\n  _Large$parameters2$do;\nimport React from 'react';\nimport { TrSelect } from './TrSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Component/Select',\n  component: TrSelect,\n  tags: ['autodocs']\n};\nconst Template = args => /*#__PURE__*/_jsxDEV(TrSelect, {\n  ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 26\n}, this);\n_c = Template;\nexport const Basic = Template.bind({});\nBasic.args = {\n  id: 'select',\n  disabled: false,\n  size: 'medium',\n  labelShow: true,\n  label: 'Basic',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nexport const noLabel = Template.bind({});\nnoLabel.args = {\n  id: 'noLabel',\n  disabled: false,\n  size: 'medium',\n  labelShow: false,\n  label: 'noLabel',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  id: 'Disabled',\n  disabled: true,\n  size: 'medium',\n  labelShow: true,\n  label: 'Disabled',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nexport const Small = Template.bind({});\nSmall.args = {\n  id: 'Small',\n  disabled: false,\n  size: 'small',\n  labelShow: true,\n  label: 'Small',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nexport const Large = Template.bind({});\nLarge.args = {\n  id: 'Large',\n  disabled: false,\n  size: 'large',\n  labelShow: true,\n  label: 'Large',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...((_Basic$parameters = Basic.parameters) === null || _Basic$parameters === void 0 ? void 0 : _Basic$parameters.docs),\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...((_Basic$parameters2 = Basic.parameters) === null || _Basic$parameters2 === void 0 ? void 0 : (_Basic$parameters2$do = _Basic$parameters2.docs) === null || _Basic$parameters2$do === void 0 ? void 0 : _Basic$parameters2$do.source)\n    }\n  }\n};\nnoLabel.parameters = {\n  ...noLabel.parameters,\n  docs: {\n    ...((_noLabel$parameters = noLabel.parameters) === null || _noLabel$parameters === void 0 ? void 0 : _noLabel$parameters.docs),\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...((_noLabel$parameters2 = noLabel.parameters) === null || _noLabel$parameters2 === void 0 ? void 0 : (_noLabel$parameters2$ = _noLabel$parameters2.docs) === null || _noLabel$parameters2$ === void 0 ? void 0 : _noLabel$parameters2$.source)\n    }\n  }\n};\nDisabled.parameters = {\n  ...Disabled.parameters,\n  docs: {\n    ...((_Disabled$parameters = Disabled.parameters) === null || _Disabled$parameters === void 0 ? void 0 : _Disabled$parameters.docs),\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...((_Disabled$parameters2 = Disabled.parameters) === null || _Disabled$parameters2 === void 0 ? void 0 : (_Disabled$parameters3 = _Disabled$parameters2.docs) === null || _Disabled$parameters3 === void 0 ? void 0 : _Disabled$parameters3.source)\n    }\n  }\n};\nSmall.parameters = {\n  ...Small.parameters,\n  docs: {\n    ...((_Small$parameters = Small.parameters) === null || _Small$parameters === void 0 ? void 0 : _Small$parameters.docs),\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...((_Small$parameters2 = Small.parameters) === null || _Small$parameters2 === void 0 ? void 0 : (_Small$parameters2$do = _Small$parameters2.docs) === null || _Small$parameters2$do === void 0 ? void 0 : _Small$parameters2$do.source)\n    }\n  }\n};\nLarge.parameters = {\n  ...Large.parameters,\n  docs: {\n    ...((_Large$parameters = Large.parameters) === null || _Large$parameters === void 0 ? void 0 : _Large$parameters.docs),\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...((_Large$parameters2 = Large.parameters) === null || _Large$parameters2 === void 0 ? void 0 : (_Large$parameters2$do = _Large$parameters2.docs) === null || _Large$parameters2$do === void 0 ? void 0 : _Large$parameters2$do.source)\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Template\");\nexport const __namedExportsOrder = [\"Basic\", \"noLabel\", \"Disabled\", \"Small\", \"Large\"];","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React from 'react';\nimport { TrSelect } from './TrSelect';\nexport default {\n  title: 'Component/Select',\n  component: TrSelect,\n  tags: ['autodocs']\n};\nconst Template = args => <TrSelect {...args} />;\nexport const Basic = Template.bind({});\nBasic.args = {\n  id: 'select',\n  disabled: false,\n  size: 'medium',\n  labelShow: true,\n  label: 'Basic',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nexport const noLabel = Template.bind({});\nnoLabel.args = {\n  id: 'noLabel',\n  disabled: false,\n  size: 'medium',\n  labelShow: false,\n  label: 'noLabel',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  id: 'Disabled',\n  disabled: true,\n  size: 'medium',\n  labelShow: true,\n  label: 'Disabled',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nexport const Small = Template.bind({});\nSmall.args = {\n  id: 'Small',\n  disabled: false,\n  size: 'small',\n  labelShow: true,\n  label: 'Small',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nexport const Large = Template.bind({});\nLarge.args = {\n  id: 'Large',\n  disabled: false,\n  size: 'large',\n  labelShow: true,\n  label: 'Large',\n  options: [{\n    value: 'option1',\n    label: 'option1'\n  }, {\n    value: 'option2',\n    label: 'option2'\n  }, {\n    value: 'option3',\n    label: 'option3'\n  }]\n};\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nnoLabel.parameters = {\n  ...noLabel.parameters,\n  docs: {\n    ...noLabel.parameters?.docs,\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...noLabel.parameters?.docs?.source\n    }\n  }\n};\nDisabled.parameters = {\n  ...Disabled.parameters,\n  docs: {\n    ...Disabled.parameters?.docs,\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...Disabled.parameters?.docs?.source\n    }\n  }\n};\nSmall.parameters = {\n  ...Small.parameters,\n  docs: {\n    ...Small.parameters?.docs,\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...Small.parameters?.docs?.source\n    }\n  }\n};\nLarge.parameters = {\n  ...Large.parameters,\n  docs: {\n    ...Large.parameters?.docs,\n    source: {\n      originalSource: \"args => <TrSelect {...args} />\",\n      ...Large.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}