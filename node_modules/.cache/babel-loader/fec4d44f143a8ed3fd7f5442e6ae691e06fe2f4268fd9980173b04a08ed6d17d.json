{"ast":null,"code":"var _jsxFileName = \"/Users/humuson/Desktop/project/personal/markup-guide-project/src/stories/TrDropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles/TrDropdown.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TrDropdown = _ref => {\n  _s();\n  let {\n    dropdownData,\n    ...props\n  } = _ref;\n  const [selectedItem, setSelectedItem] = useState('선택해주세요.');\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setIsDropdownOpen(false);\n  };\n  const handleDropdownClick = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  const handleOutsideClick = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsDropdownOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => {\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['dropdown-wrap'],\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles['dropdown-selected'],\n        onClick: handleDropdownClick,\n        children: selectedItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles['dropdown-list'],\n        children: dropdownData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles['dropdown-item'],\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: styles['dropdown-button'],\n            onClick: () => handleItemClick(item),\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(TrDropdown, \"Hdd0yUUtCwAzGHSIa0TkuEdGvo8=\");\n_c = TrDropdown;\nTrDropdown.propTypes = {\n  dropdownData: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nTrDropdown.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TrDropdown\",\n  \"props\": {\n    \"dropdownData\": {\n      \"description\": \"\",\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"string\"\n        }\n      },\n      \"required\": true\n    }\n  }\n};\nexport default TrDropdown;\nvar _c;\n$RefreshReg$(_c, \"TrDropdown\");","map":{"version":3,"names":["React","useState","useRef","useEffect","PropTypes","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","TrDropdown","_ref","_s","dropdownData","props","selectedItem","setSelectedItem","isDropdownOpen","setIsDropdownOpen","dropdownRef","handleItemClick","item","handleDropdownClick","handleOutsideClick","event","current","contains","target","document","addEventListener","removeEventListener","children","className","ref","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","propTypes","arrayOf","string","isRequired","__docgenInfo","$RefreshReg$"],"sources":["/Users/humuson/Desktop/project/personal/markup-guide-project/src/stories/TrDropdown.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles/TrDropdown.module.scss';\n\nexport const TrDropdown = ({ dropdownData, ...props }) => {\n    const [selectedItem, setSelectedItem] = useState('선택해주세요.');\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const dropdownRef = useRef(null);\n\n    const handleItemClick = (item) => {\n        setSelectedItem(item);\n        setIsDropdownOpen(false);\n    };\n\n    const handleDropdownClick = () => {\n        setIsDropdownOpen(!isDropdownOpen);\n    };\n\n    const handleOutsideClick = (event) => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n            setIsDropdownOpen(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleOutsideClick);\n        return () => {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        };\n    }, []);\n\n    return (\n        <>\n            <div className={styles['dropdown-wrap']} ref={dropdownRef}>\n                <button type=\"button\" className={styles['dropdown-selected']} onClick={handleDropdownClick}>\n                    {selectedItem}\n                </button>\n                {isDropdownOpen && (\n                    <ul className={styles['dropdown-list']}>\n                        {dropdownData.map((item, index) => (\n                            <li key={index} className={styles['dropdown-item']}>\n                                <button type=\"button\" className={styles['dropdown-button']} onClick={() => handleItemClick(item)}>\n                                    {item}\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                )}\n            </div>\n        </>\n    );\n};\n\nTrDropdown.propTypes = {\n    dropdownData: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default TrDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}